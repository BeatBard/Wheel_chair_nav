<launch>

  <!-- ─────── 2. Static TF   (base_link → lidar_link) ─────── -->
  <!-- Replace xyz/rpy with your real mounting offset          -->
  <node pkg="tf" type="static_transform_publisher"
        name="lidar_tf" args="0.45 0 0 0 0 0 base_link lidar_link 50"/>
  
  <!--comment this-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom"
        args="0 0 0 0 0 0 map odom"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="odom_to_base_link"
        args="0 0 0 0 0 0 odom base_link"/>

  <!---->

  <node pkg="laser_scan_matcher" type="laser_scan_matcher_node"
      name="laser_scan_matcher_node" output="screen">
  <param name="scan_topic"          value="/scan"/>
  <param name="fixed_frame"         value="map"/>
  <param name="base_frame"          value="base_link"/>
  <param name="odom_frame"          value="odom"/>
  <param name="publish_tf"          value="true"/>
  <param name="publish_odom"        value="true"/>
  <param name="transform_tolerance" value="0.3"/>
</node>

<!-- Static transforms from base_link to each SICK sensor frame -->
<node pkg="tf" type="static_transform_publisher" name="tf_cloud_POS_000"
      args="0 0 0 0 0 0 base_link cloud_POS_000_DIST1 100"/>
<node pkg="tf" type="static_transform_publisher" name="tf_cloud_NEG_250"
      args="0 0 0 0 0 0 base_link cloud_NEG_250_DIST1 100"/>
<node pkg="tf" type="static_transform_publisher" name="tf_cloud_POS_250"
      args="0 0 0 0 0 0 base_link cloud_POS_250_DIST1 100"/>
<node pkg="tf" type="static_transform_publisher" name="tf_cloud_NEG_500"
      args="0 0 0 0 0 0 base_link cloud_NEG_500_DIST1 100"/>


  <!-- ─────── 3. Robot description → publishes the rest of TF -->
  <!-- (Optional but recommended: replace with your URDF)      -->
  <!-- <node pkg="robot_state_publisher" type="robot_state_publisher"
        name="robot_state_publisher">
    <param name="robot_description"
           command="$(find xacro)/xacro '$(find robot_project_tmp)/urdf/robot.urdf.xacro'"/>
  </node> -->


</launch>
