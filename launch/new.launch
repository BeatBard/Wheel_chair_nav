<?xml version="1.0"?>
<launch>
  <!--——————————————————————————————————————-->
  <!-- 1) Map Server -->
  <!--——————————————————————————————————————-->
  <arg name="map_file" default="$(find sick_scan_xd)/maps/r_lab3.yaml"/>
  <node pkg="map_server" type="map_server" name="map_server" output="screen"
        args="$(arg map_file)">
    <param name="frame_id" value="map"/>
  </node>

  <!--——————————————————————————————————————-->
  <!-- 2) Latched Static Transforms (tf2_ros) -->
  <!--    valid for any timestamp, past or future -->
  <!--——————————————————————————————————————-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom"
        args="0 0 0 0 0 0 map odom"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="odom_to_base_link"
        args="0 0 0 0 0 0 odom base_link"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="laser_POS_000"
        args="0 0 0 0 0 0 base_link cloud_POS_000_DIST1"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="laser_NEG_250"
        args="0 0 0 0 0 0 base_link cloud_NEG_250_DIST1"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="laser_POS_250"
        args="0 0 0 0 0 0 base_link cloud_POS_250_DIST1"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="laser_NEG_500"
        args="0 0 0 0 0 0 base_link cloud_NEG_500_DIST1"/>

  <!--——————————————————————————————————————-->
  <!-- 3) Optional: Laser‑based Odometry -->
  <!--——————————————————————————————————————-->
  <arg name="use_scan_matcher" default="true"/>
  <group if="$(arg use_scan_matcher)">
    <node pkg="laser_scan_matcher" type="laser_scan_matcher_node"
          name="laser_scan_matcher_node" output="screen">
      <param name="scan_topic"          value="/scan"/>
      <param name="fixed_frame"         value="map"/>
      <param name="base_frame"          value="base_link"/>
      <param name="odom_frame"          value="odom"/>
      <param name="publish_tf"          value="true"/>
      <param name="publish_odom" value="true"/>
      <param name="transform_tolerance" value="0.6"/>
    </node>
  </group>

  <!--——————————————————————————————————————-->
  <!-- 4) AMCL Localization -->
  <!--——————————————————————————————————————-->
  <include file="$(find robot_project_tmp)/launch/amcl1.launch"/>

  <!--——————————————————————————————————————-->
  <!-- 5) move_base (no delay needed) -->
  <!--——————————————————————————————————————-->
  <node pkg="move_base" type="move_base" name="move_base" output="screen">
    <remap from="cmd_vel" to="/cmd_vel"/>
    <remap from="odom"    to="odom"/>

    <rosparam file="$(find robot_project_tmp)/param/costmap_common_params.yaml"
              command="load" ns="global_costmap"/>
    <rosparam file="$(find robot_project_tmp)/param/global_costmap_params.yaml"
              command="load" ns="global_costmap"/>
    <rosparam file="$(find robot_project_tmp)/param/costmap_common_params.yaml"
              command="load" ns="local_costmap"/>
    <rosparam file="$(find robot_project_tmp)/param/local_costmap_params.yaml"
              command="load" ns="local_costmap"/>
    <rosparam file="$(find robot_project_tmp)/param/move_base_params.yaml"
              command="load"/>
    <rosparam file="$(find robot_project_tmp)/param/dwa_local_planner_params.yaml"
              command="load"/>
  </node>

  <!--——————————————————————————————————————-->
  <!-- 6) RViz (optional) -->
  <!--——————————————————————————————————————-->
  <arg name="open_rviz" default="true"/>
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" output="screen"
            args="-d $(find robot_project_tmp)/rviz/loading.rviz">
      <param name="wait_for_transform_duration" value="0.6"/>
    </node>
  </group>
</launch>

